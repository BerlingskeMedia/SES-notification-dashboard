---
kind: pipeline
type: docker
name: PR checks

steps:
  - name: build
    image: node:14.11-alpine
    commands:
      - npm ci
  - name: lint
    image: node:14.11-alpine
    commands:
      - npm run lint
#  - name: test
#    image: node:14.11-alpine
#    commands:
#      - npm test
#  - name: e2e
#    image: node:14.11-alpine
#    commands:
#      - npm run e2e
  - name: build & publish docker image to ECR
    image: plugins/ecr
    settings:
      mirror: https://proxy.docker.all.berlingskemedia.net
      access_key:
        from_secret: aws_access_key_testing
      secret_key:
        from_secret: aws_access_key_secret_testing
      region: eu-west-1
      repo: cust-testing-newsletter-ecr/notification-dashboard
      registry: 815296035528.dkr.ecr.eu-west-1.amazonaws.com
      dockerfile: Dockerfile
      tags:
        - ${DRONE_BUILD_NUMBER}-${CI_COMMIT_SHA}
        - ${CI_COMMIT_SHA}

trigger:
  event:
    - pull_request

#---
#kind: pipeline
#type: docker
#name: Latest master pipeline
#steps:
#  - name: build & publish latest docker image to test ECR
#    image: plugins/ecr
#    environment:
#      NPM_TOKEN:
#        from_secret: npm_token
#    settings:
#      mirror: https://proxy.docker.all.berlingskemedia.net
#      access_key:
#        from_secret: aws_access_key_testing
#      secret_key:
#        from_secret: aws_access_key_secret_testing
#      region: eu-west-1
#      repo: userhandling-testing-userhandling-ecr/paymentmanager
#      registry: 815296035528.dkr.ecr.eu-west-1.amazonaws.com
#      dockerfile: Dockerfile
#      build_args_from_env:
#        - NPM_TOKEN
#      tags:
#        - latest
#        - ${DRONE_BUILD_NUMBER}-${CI_COMMIT_SHA}
#        - ${CI_COMMIT_SHA}
#trigger:
#  event:
#    - push
#  branch:
#    - master
#
#---
#kind: pipeline
#type: docker
#name: deploy pipeline
#clone:
#  disable: true
#
#steps:
#  - name: deploy to production
#    image: pelotech/drone-ecs:1.0.7
#    settings:
#      access_key:
#        from_secret: aws_access_key_testing
#      secret_key:
#        from_secret: aws_access_key_secret_testing
#      cluster: userhandling-testing-userhandling
#      compatibilities: FARGATE
#      deployment_configuration: 100 200
#      desired_count: 1
#      docker_image: 815296035528.dkr.ecr.eu-west-1.amazonaws.com/userhandling-testing-userhandling-ecr/paymentmanager
#      container_name: userhandling-testing-userhandling-paymentmanager-qa1-container
#      family: userhandling-paymentmanager-qa1
#      log_driver: awslogs
#      log_options:
#        - awslogs-group=userhandling-testing-userhandling
#        - awslogs-region=eu-west-1
#        - awslogs-stream-prefix=userhandling-paymentmanager-qa1
#      memory: 512
#      port_mappings:
#        - 9000 9000
#      region: eu-west-1
#      service: userhandling-testing-userhandling-paymentmanager-qa1
#      service_network_security_groups:
#        - sg-0f88cbea3ccd6ca36
#        - sg-037e27cbada07c817
#      service_network_subnets:
#        - subnet-0ace4f6a68677187c
#        - subnet-01633ca14c693e302
#        - subnet-061a8876f7f68ea21
#      tag: ${DRONE_BUILD_PARENT}-${CI_COMMIT_SHA}
#      task_cpu: 256
#      task_execution_role_arn: arn:aws:iam::815296035528:role/userhandling-testing-userhandling-paymentmanager-qa1-exec
#      task_memory: 512
#      task_network_mode: awsvpc
#    when:
#      event:
#        - promote
#      target:
#        - production
#trigger:
#  event:
#    - promote
#  target:
#    - production


---
kind: secret
name: aws_access_key_testing
get:
  path: drone/cust-testing-newsletter
  name: aws_access_key
---
kind: secret
name: aws_access_key_secret_testing
get:
  path: drone/cust-testing-newsletter
  name: aws_access_key_secret
